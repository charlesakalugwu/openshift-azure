// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	api "github.com/openshift/openshift-azure/pkg/api"
	api0 "github.com/openshift/openshift-azure/pkg/api/plugin/api"
)

// MockGenerator is a mock of Generator interface
type MockGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockGeneratorMockRecorder
}

// MockGeneratorMockRecorder is the mock recorder for MockGenerator
type MockGeneratorMockRecorder struct {
	mock *MockGenerator
}

// NewMockGenerator creates a new mock instance
func NewMockGenerator(ctrl *gomock.Controller) *MockGenerator {
	mock := &MockGenerator{ctrl: ctrl}
	mock.recorder = &MockGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGenerator) EXPECT() *MockGeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method
func (m *MockGenerator) Generate(cs *api.OpenShiftManagedCluster, template *api0.Config) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", cs, template)
	ret0, _ := ret[0].(error)
	return ret0
}

// Generate indicates an expected call of Generate
func (mr *MockGeneratorMockRecorder) Generate(cs, template interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockGenerator)(nil).Generate), cs, template)
}

// InvalidateSecrets mocks base method
func (m *MockGenerator) InvalidateSecrets(cs *api.OpenShiftManagedCluster) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvalidateSecrets", cs)
	ret0, _ := ret[0].(error)
	return ret0
}

// InvalidateSecrets indicates an expected call of InvalidateSecrets
func (mr *MockGeneratorMockRecorder) InvalidateSecrets(cs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvalidateSecrets", reflect.TypeOf((*MockGenerator)(nil).InvalidateSecrets), cs)
}
